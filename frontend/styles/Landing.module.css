/* ====== LANDING PAGE LAYOUT ====== */

.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

/* Fixed Header */
.header {
  /* No need for flex: 0 0 auto here if it's the only direct child of container before main-wrapper */
  position: sticky;
  top: 0;
  z-index: 100;
  background: white; /* Ensure it covers content when scrolling */
  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.05);
}

/* Main Area: Sidebar + Content */
.main {
  display: flex;
  flex: 1;
  /* This is the key change: Allow the content to scroll within the main container */
  /* Remove overflow: hidden; from .container and add it here or on a content wrapper */
  overflow: hidden; 
}

/* Fixed Sidebar */
.sidebar {
  flex: 0 0 260px;
  height: 100%; /* Will take full height of .main */
  overflow-y: auto;
  /* The padding-top here is okay, but it doesn't solve the header overlap */
}

/* Scrollable Content Area */
.content {
  flex: 1;
  padding: 40px;
  /* This is where the scrollbar should appear */
  overflow-y: auto;
  background: #fcfcfd;
}

/* A helper class to apply a margin-top to the first child of the main content area */
/* You would apply this class to the content inside your Publish component, for example */
.firstContentElement {
  margin-top: 40px; /* Or whatever the height of your header is */
}

/* Placeholder Content */
.placeholder {
  max-width: 800px;
  margin: 0 auto;
  text-align: center;
  padding: 80px 20px;
}

.placeholder h2 {
  font-size: 1.8rem;
  color: #1d1d1f;
  margin-bottom: 16px;
}

.placeholder p {
  font-size: 1.1rem;
  color: #575759;
  line-height: 1.6;
}

/* Responsive: Collapse sidebar on mobile */
@media (max-width: 768px) {
  .sidebar {
    flex: 0 0 80px;
  }

  .content {
    padding: 20px;
  }
}